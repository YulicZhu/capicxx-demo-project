/*
* This file was generated by the CommonAPI Generators.
* Used org.genivi.commonapi.core 3.1.12.v201705291619.
* Used org.franca.core 0.9.1.201412191134.
*
* This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
* If a copy of the MPL was not distributed with this file, You can obtain one at
* http://mozilla.org/MPL/2.0/.
*/
#include <v1/commonapi/examples/E03MethodsStubDefault.hpp>
#include <assert.h>

namespace v1 {
namespace commonapi {
namespace examples {

E03MethodsStubDefault::E03MethodsStubDefault():
        remoteEventHandler_(this),
        interfaceVersion_(E03Methods::getInterfaceVersion()) {
}

const CommonAPI::Version& E03MethodsStubDefault::getInterfaceVersion(std::shared_ptr<CommonAPI::ClientId> _client) {
    (void)_client;
    return interfaceVersion_;
}

E03MethodsStubRemoteEvent* E03MethodsStubDefault::initStubAdapter(const std::shared_ptr< E03MethodsStubAdapter> &_adapter) {
    CommonAPI::Stub<E03MethodsStubAdapter, E03MethodsStubRemoteEvent>::stubAdapter_ = _adapter;
    return &remoteEventHandler_;
}


void E03MethodsStubDefault::foo(const std::shared_ptr<CommonAPI::ClientId> _client, int32_t _x1, std::string _x2, fooReply_t _reply) {
    (void)_client;
    (void)_x1;
    (void)_x2;
    E03Methods::stdErrorTypeEnum error;
    int32_t y1 = 0;
    std::string y2 = "";
    _reply(error, y1, y2);
}


void E03MethodsStubDefault::fireMyStatusEvent(const int32_t &_myCurrentValue) {
    E03MethodsStub::fireMyStatusEvent(_myCurrentValue);
}


E03MethodsStubDefault::RemoteEventHandler::RemoteEventHandler(E03MethodsStubDefault *_defaultStub)
    : 
      defaultStub_(_defaultStub) {
}

} // namespace examples
} // namespace commonapi
} // namespace v1
